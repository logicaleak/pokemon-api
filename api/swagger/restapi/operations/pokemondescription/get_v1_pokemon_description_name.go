// Code generated by go-swagger; DO NOT EDIT.

package pokemondescription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1PokemonDescriptionNameHandlerFunc turns a function with the right signature into a get v1 pokemon description name handler
type GetV1PokemonDescriptionNameHandlerFunc func(GetV1PokemonDescriptionNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1PokemonDescriptionNameHandlerFunc) Handle(params GetV1PokemonDescriptionNameParams) middleware.Responder {
	return fn(params)
}

// GetV1PokemonDescriptionNameHandler interface for that can handle valid get v1 pokemon description name params
type GetV1PokemonDescriptionNameHandler interface {
	Handle(GetV1PokemonDescriptionNameParams) middleware.Responder
}

// NewGetV1PokemonDescriptionName creates a new http.Handler for the get v1 pokemon description name operation
func NewGetV1PokemonDescriptionName(ctx *middleware.Context, handler GetV1PokemonDescriptionNameHandler) *GetV1PokemonDescriptionName {
	return &GetV1PokemonDescriptionName{Context: ctx, Handler: handler}
}

/*GetV1PokemonDescriptionName swagger:route GET /v1/pokemon/description/{name} pokemondescription getV1PokemonDescriptionName

GetV1PokemonDescriptionName get v1 pokemon description name API

*/
type GetV1PokemonDescriptionName struct {
	Context *middleware.Context
	Handler GetV1PokemonDescriptionNameHandler
}

func (o *GetV1PokemonDescriptionName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1PokemonDescriptionNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
