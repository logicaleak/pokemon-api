// Code generated by go-swagger; DO NOT EDIT.

package pokemondescription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ozum.safaoglu/pokemon-api/api/swagger/models"
)

// GetV1PokemonPokemonNameOKCode is the HTTP code returned for type GetV1PokemonPokemonNameOK
const GetV1PokemonPokemonNameOKCode int = 200

/*GetV1PokemonPokemonNameOK Describes a pokemon

swagger:response getV1PokemonPokemonNameOK
*/
type GetV1PokemonPokemonNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Description `json:"body,omitempty"`
}

// NewGetV1PokemonPokemonNameOK creates GetV1PokemonPokemonNameOK with default headers values
func NewGetV1PokemonPokemonNameOK() *GetV1PokemonPokemonNameOK {

	return &GetV1PokemonPokemonNameOK{}
}

// WithPayload adds the payload to the get v1 pokemon pokemon name o k response
func (o *GetV1PokemonPokemonNameOK) WithPayload(payload *models.Description) *GetV1PokemonPokemonNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 pokemon pokemon name o k response
func (o *GetV1PokemonPokemonNameOK) SetPayload(payload *models.Description) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PokemonPokemonNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetV1PokemonPokemonNameDefault generic error response

swagger:response getV1PokemonPokemonNameDefault
*/
type GetV1PokemonPokemonNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1PokemonPokemonNameDefault creates GetV1PokemonPokemonNameDefault with default headers values
func NewGetV1PokemonPokemonNameDefault(code int) *GetV1PokemonPokemonNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetV1PokemonPokemonNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get v1 pokemon pokemon name default response
func (o *GetV1PokemonPokemonNameDefault) WithStatusCode(code int) *GetV1PokemonPokemonNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get v1 pokemon pokemon name default response
func (o *GetV1PokemonPokemonNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get v1 pokemon pokemon name default response
func (o *GetV1PokemonPokemonNameDefault) WithPayload(payload *models.Error) *GetV1PokemonPokemonNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 pokemon pokemon name default response
func (o *GetV1PokemonPokemonNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PokemonPokemonNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
