// Code generated by go-swagger; DO NOT EDIT.

package pokemondescription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"ozum.safaoglu/pokemon-api/api/swagger/models"
)

// GetV1PokemonDescriptionNameOKCode is the HTTP code returned for type GetV1PokemonDescriptionNameOK
const GetV1PokemonDescriptionNameOKCode int = 200

/*GetV1PokemonDescriptionNameOK Describes a pokemon

swagger:response getV1PokemonDescriptionNameOK
*/
type GetV1PokemonDescriptionNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Description `json:"body,omitempty"`
}

// NewGetV1PokemonDescriptionNameOK creates GetV1PokemonDescriptionNameOK with default headers values
func NewGetV1PokemonDescriptionNameOK() *GetV1PokemonDescriptionNameOK {

	return &GetV1PokemonDescriptionNameOK{}
}

// WithPayload adds the payload to the get v1 pokemon description name o k response
func (o *GetV1PokemonDescriptionNameOK) WithPayload(payload *models.Description) *GetV1PokemonDescriptionNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 pokemon description name o k response
func (o *GetV1PokemonDescriptionNameOK) SetPayload(payload *models.Description) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PokemonDescriptionNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetV1PokemonDescriptionNameDefault generic error response

swagger:response getV1PokemonDescriptionNameDefault
*/
type GetV1PokemonDescriptionNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1PokemonDescriptionNameDefault creates GetV1PokemonDescriptionNameDefault with default headers values
func NewGetV1PokemonDescriptionNameDefault(code int) *GetV1PokemonDescriptionNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetV1PokemonDescriptionNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get v1 pokemon description name default response
func (o *GetV1PokemonDescriptionNameDefault) WithStatusCode(code int) *GetV1PokemonDescriptionNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get v1 pokemon description name default response
func (o *GetV1PokemonDescriptionNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get v1 pokemon description name default response
func (o *GetV1PokemonDescriptionNameDefault) WithPayload(payload *models.Error) *GetV1PokemonDescriptionNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 pokemon description name default response
func (o *GetV1PokemonDescriptionNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1PokemonDescriptionNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
